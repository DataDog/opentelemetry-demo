/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "com.google.protobuf" version "0.9.4"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

shadowJar {
    mergeServiceFiles()
}

ext {
    grpcVersion = "1.56.1"
    protobufVersion = "3.23.4"
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.apache.kafka:kafka_2.13:3.5.1'

    implementation 'org.apache.kafka:kafka-clients:2.3.0'

    implementation("com.google.api.grpc:proto-google-common-protos:2.22.1")
    
    implementation("io.grpc:grpc-protobuf:${grpcVersion}")

    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

    implementation "io.grpc:grpc-stub:${grpcVersion}" // Add this line

    implementation("javax.annotation:javax.annotation-api:1.3.2")

    implementation 'org.slf4j:slf4j-api:2.0.7'

    implementation 'org.slf4j:slf4j-simple:2.0.7'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'orderproducerservice.App'
}

jar {
    manifest {
        attributes 'Main-Class': 'orderproducerservice.App'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        ofSourceSet("main").forEach {
            it.plugins {
                grpc {}
            }
        }
    }

}
