apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Chart.Name }}-config-templates
  labels:
    app: {{ $.Chart.Name }}
    component: {{ $.Chart.Name }}-config-templates
data:
  {{ $.Chart.Name }}-config.yaml: |
    receivers:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otelcol'
            scrape_interval: 10s
            static_configs:
            - targets: ['0.0.0.0:8888']
            metric_relabel_configs:
            - source_labels: [ __name__ ]
              regex: '.*grpc_io.*'
              action: drop
      k8s_cluster:
        collection_interval: 10s
      hostmetrics:
        scrapers:
          cpu:
            metrics:
              system.cpu.utilization:
                enabled: true
          disk:
          filesystem:
          load:
          memory:
            metrics:
              system.memory.utilization:
                enabled: true
          network:
            metrics:
              system.network.io.receive:
                enabled: true
              system.network.io.transmit:
                enabled: true
          processes:
      otlp:
        protocols:
          grpc:
            endpoint: ":5317"
          http:
            endpoint: ":5318"
    exporters:
      otlp:
        endpoint: "${HOST_IP}:4317"
        tls:
          insecure: true
      datadog:
        api:
          key: '{% with secret "kv/k8s/otel/shared/dd_otel" %}{% .Data.data.api_key %}{% end %}'
          site: datadoghq.com
    processors:
      resourcedetection:
        # ensures host.name and other important resource tags
        # get picked up
        detectors: [system, env]
        timeout: 5s
        override: false
      # adds various tags related to k8s
      k8sattributes:
      batch:
        send_batch_max_size: 1000
        send_batch_size: 100
        timeout: 10s
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Chart.Name }}-config-processor
  labels:
    app: {{ $.Chart.Name }}
    component: {{ $.Chart.Name }}-config-processor
data:
  {{ $.Chart.Name }}-config-processor.yaml: |
    processors:
      metricstransform:
        transforms:
          - include: system.cpu.load_average.1m
            match_type: strict
            action: insert
            new_name: system.load.1
            operations:
              action: add_label
              new_label: dd_dupe_metric
              new_value: true
          - include: system.cpu.load_average.5m
            match_type: strict
            action: insert
            new_name: system.load.5
            operations:
              action: add_label
              new_label: dd_dupe_metric
              new_value: true
          - include: system.cpu.load_average.15m
            match_type: strict
            action: insert
            new_name: system.load.15
            operations:
              action: add_label
              new_label: dd_dupe_metric
              new_value: true
          - include: system.cpu.utilization
            experimental_match_labels: {"state": "idle"}
            match_type: strict
            action: insert
            new_name: system.cpu.idle
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
              - action: experimental_scale_value
                experimental_scale: 100
          - include: system.cpu.utilization
            experimental_match_labels: {"state": "user"}
            match_type: strict
            action: insert
            new_name: system.cpu.user
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
              - action: experimental_scale_value
                experimental_scale: 100
          - include: system.cpu.utilization
            experimental_match_labels: {"state": "wait"}
            match_type: strict
            action: insert
            new_name: system.cpu.iowait
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
              - action: experimental_scale_value
                experimental_scale: 100
          - include: system.cpu.utilization
            experimental_match_labels: {"state": "steal"}
            match_type: strict
            action: insert
            new_name: system.cpu.stolen
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
              - action: experimental_scale_value
                experimental_scale: 100
          - include: system.memory.usage
            match_type: strict
            action: insert
            new_name: system.memory.total
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
          - include: system.memory.usage
            experimental_match_labels: {"state": "free"}
            match_type: strict
            action: insert
            new_name: system.memory.usable
            operations:
              - action: add_label
                new_label: dd_dupe_metric
                new_value: true
    service:
      pipelines:
        metrics:
          receivers: [otlp,k8s_cluster,hostmetrics, prometheus]
          processors: [ resourcedetection, k8sattributes, metricstransform, batch]
          exporters: [datadog,otlp]

        traces:
          receivers: [otlp]
          processors: [resourcedetection, k8sattributes, batch]
          exporters: [datadog,otlp]

---
