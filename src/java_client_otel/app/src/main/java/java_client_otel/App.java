/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package java_client_otel;

import java.lang.Thread;
import java.lang.InterruptedException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import io.opentelemetry.api.trace.Span;
import io.opentelemetry.context.Scope;
import io.opentelemetry.api.GlobalOpenTelemetry;


public class App {
    private static final Logger logger = LogManager.getLogger("java_client_otel");

    public static void main(String[] args) {
        String urlString = "http://opentelemetry-demo-go-server-dd.otel-ingest-staging:8082/inject";
        HttpURLConnection connection = null;

        while (true) {
            // Start Span
            Span span = GlobalOpenTelemetry.getTracer("java-client-app", "0.1.3").spanBuilder("BuildRequest").startSpan();

            try (Scope scope = span.makeCurrent()) {
                URL url = new URL(urlString);
                connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("GET");
                int responseCode = connection.getResponseCode();
                logger.info("Response Code: " + responseCode);

                if (responseCode == HttpURLConnection.HTTP_OK) {
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                    String inputLine;
                    StringBuilder response = new StringBuilder();
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                    in.close();
                    logger.info("HTTP request success");
                } else {
                    logger.error("failed request with response code: ", responseCode);
                }
            } 
            catch (Exception e) {
                logger.error(e.toString());
            } finally {
                if (connection != null) {
                connection.disconnect();
                }
                span.end();
            }

            // SLEEP
            try {
                Thread.sleep(4000);
            } catch (InterruptedException e) {
                logger.error("Unable to sleep: ", e);
            }
        }
    }
}
